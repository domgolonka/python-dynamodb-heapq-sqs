#!/usr/bin/env python

'''
  CMPT 474-V0.5 ASSIGNMENT 3-BASICDB
'''

# Library packages
from boto.sqs.message import RawMessage
import os
import re
import os, time
import sys
import json
import boto.sqs
import boto.sqs.message
import boto.dynamodb2
import json

from boto.dynamodb2.items import Item
from boto.dynamodb2.fields import HashKey, RangeKey, KeysOnlyIndex, GlobalAllIndex
from boto.dynamodb2.table import Table
from boto.exception import JSONResponseError
from bottle import route, run, request, response, abort, default_app, HTTPResponse


AWS_REGION = AWS_REGION = "us-west-2"
try:
    conn = boto.sqs.connect_to_region(AWS_REGION)
    if conn == None:
        sys.stderr.write("Could not connect to AWS region '{0}'\n".format(AWS_REGION))
        sys.exit(1)


    input_q = conn.get_queue("sqs_in_queue")
    #input_q.set_message_class()
    

except Exception as e:
    sys.stderr.write("Exception connecting to SQS\n")
    sys.stderr.write(str(e))
    sys.exit(1)


while True:
	print "lalala"

	req_smg = input_q.get_message()
	
	
	if not req_smg:
		time.sleep(1)
	else:
		#req_smg[id]
		#print "okay i get here"
	#	jsonResponse = json.loads(req_smg.decode('utf-8'))
		req = json.loads(req_smg.get_body())
		'''
def getConn():
	try:
		conn = boto.sqs.connect_to_region(AWS_REGION)
		if conn == None:
			sys.stderr.write("Could not connect to AWS region '{0}'\n".format(AWS_REGION))
			sys.exit(1)

		db_q = conn.get_queue("sqs_in_queue")

	except Exception as e:
		sys.stderr.write("Exception connecting to SQS\n")
		sys.stderr.write(str(e))
		sys.exit(1)

	return my_q
'''



    
